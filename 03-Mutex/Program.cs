int counter = 0;
Mutex mutex = new Mutex(); // створюємо м`ютекс
// Mutex - це примітив синхронізації, який може бути використаний для захисту критичних секцій коду в багатопотоковому середовищі
// на відміну від lock, який працює лише в межах одного процесу, Mutex може бути використаний між процесами
// це робить його більш універсальним, але і повільнішим через накладні витрати на міжпроцесну комунікацію
// використання Mutex вимагає явного захоплення (WaitOne) і звільнення (ReleaseMutex), що робить код більш громіздким у порівнянні з lock

Thread t1 = new Thread(Increment);
Thread t2 = new Thread(Increment);

t1.Start();
t2.Start();

t1.Join();
t2.Join();

Console.WriteLine($"Result: counter = {counter}");
void Increment()
{
    for (int i = 0; i < 100000; i++)
    {
        mutex.WaitOne();  // чекаємо, поки мютекс стане доступним, тоді захоплюємо м`ютекс  і блокується доступ іншим потокам
        counter++;
        mutex.ReleaseMutex(); // звільняємо м`ютекс = (дозволяємо доступ іншим потокам)
    }
}
