using System;
using System.Threading;

int counter = 0;

Thread t1 = new Thread(Increment);
Thread t2 = new Thread(Increment);

t1.Start();
t2.Start();

t1.Join();
t2.Join();


Console.WriteLine($"The end: counter = {counter}"); // очікуємо, що counter буде 200000, але через відсутність синхронізації може бути менше
// кожен потік збільшує counter на 1, але те що операція ++ не є атомарною (неділимою) операцією, може призвести до втрати деяких збільшень
// наприклад, якщо обидва потоки одночасно прочитають значення counter, скажімо 1000, то обидва збільшать його до 1001 і запишуть назад, втративши одне збільшення
// це і є гонка потоків
// для уникнення таких проблем використовують механізми синхронізації, наприклад lock, Mutex, Interlocked, події
void Increment()
{
    for (int i = 0; i < 100000; i++)
    {
        counter++; // доступ без синхронізації - може виникнути гонка потоків (race condition),
                   // коли два потоки одночасно читають і записують значення counter
    }
}

/*
 counter++; // розкладається на три дії
// 1. Зчитати counter
// 2. Додати 1
// 3. Записати назад

 */


