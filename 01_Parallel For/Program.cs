// Parallel.For
//Цей метод дозволяє виконувати цикл for паралельно, тобто ітерації виконуються одночасно у кількох потоках.

// Приклад використання Parallel.For для обчислення квадратів чисел у масиві.
// Обчислення виконується паралельно, що може значно прискорити процес для великих масивів.
class Program
{
    static void Main()
    {
        int[] numbers = new int[100]; // масив для збереження результатів (квадратів чисел)

        // Паралельний цикл for для обчислення квадратів чисел від 0 до 99, буде виконуватися у кількох потоках
        Parallel.For(0, numbers.Length, i =>
        {
            numbers[i] = i * i; // обчислення квадратів
            Console.WriteLine($"Thread {Task.CurrentId} computed numbers[{i}] = {numbers[i]}"); // виведення інформації про потік і результат
            //Thread.Sleep(100); // імітація тривалої операції
        });

        Console.WriteLine("All tasks completed.");
    }
}

/*
Паралельність: цикл розбивається на частини і виконується в пулі потоків.
Немає гарантованого порядку: порядок виконання ітерацій не визначений.
Оптимально для CPU-bound задач: обчислення, трансформації, великі масиви.

**** Пул потоків - це набір потоків, які використовуються для виконання завдань.
**** Використання пулу потоків дозволяє ефективно керувати ресурсами системи.
*/